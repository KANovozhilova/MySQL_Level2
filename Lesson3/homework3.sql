/*
Задача 1.
Заполнить все таблицы БД vk данными (по 10-100 записей в каждой таблице).
*/
USE vk;

INSERT INTO `users` VALUES
('1', 'Jonas', 'Kahnwald', 'jonas111@example.org', NULL, '1111111111'),
('2', 'Martha', 'Nielsen', 'martha222@example.org', NULL, '2222222221'),
('3', 'Franziska', 'Doppler', 'franzi333@example.org', NULL, '3333333331'),
('4', 'Bartosz', 'Tiedemann', 'bart444@example.org', NULL, '4444444441'),
('5', 'Helge', 'Doppler', 'helge555@example.org', NULL, '5555555551'),
('6', 'Mikkel', 'Nielsen', 'mike666@example.org', NULL, '6666666661'),
('7', 'Hanno', 'Tauber', 'hanno777@example.org', NULL, '7777777771'),
('8', 'Edda', 'Heimann', 'edda888@example.org', NULL, '8888888881'),
('9', 'Erik', 'Obendorf', 'erik999@example.org', NULL, '9999999991'),
('10', 'Donata', 'Kraus', 'mdonata101@example.org', NULL, '9999999999')
;

INSERT INTO `messages` VALUES
('1', '1', '4', 'hey!', '2021-08-28 22:44:29'),
('2', '9', '3', 'kkkkkkkkkkkkkkk', '1991-12-06 22:30:58'),
('3', '2', '4', 'wo?', '1995-03-14 17:47:23'),
('4', '10', '8', '...', '2009-02-23 05:02:06'),
('5', '5', '7', 'tik-tak', '2020-08-09 14:37:59'),
('6', '7', '10', 'ein Termin', '1997-09-30 00:06:14'),
('7', '3', '1', 'gehst du?', '2012-11-25 07:00:39'),
('8', '1', '2', 'komm', '1985-11-25 16:56:25'),
('9', '8', '7', 'Es geht', '2100-04-18 01:08:09'),
('10', '6', '2', 'Unsere Mutter sagt so', '2013-11-01 05:14:05')
;

INSERT INTO `friend_requests` VALUES
('1', '10', 'approved', '1970-08-21 06:40:37', '2003-12-29 23:20:55'),
('1', '2', 'requested', '1987-10-10 07:33:23', '1983-01-18 01:56:05'),
('1', '3', 'approved', '2015-02-07 01:53:07', '2015-09-14 16:17:12'),
('4', '1', 'approved', '1983-04-08 15:57:26', '1976-12-28 23:54:58'),
('5', '2', 'unfriended', '1976-03-03 18:22:00', '1996-12-03 11:29:04'),
('6', '3', 'unfriended', '2008-12-06 17:07:59', '2015-11-01 08:03:23'),
('7', '1', 'requested', '1989-10-26 06:20:23', '2001-08-05 16:01:03'),
('8', '6', 'unfriended', '1987-12-30 01:50:03', '2001-07-09 07:39:50'),
('9', '7', 'requested', '2003-12-27 22:52:09', '1998-04-18 04:41:46'),
('10', '7', 'declined', '1970-05-08 00:32:15', '2007-03-22 21:08:16'),
('2', '3', 'approved', '1988-05-02 10:55:41', '1985-02-09 05:04:27')
;

INSERT INTO `communities` VALUES
('1', 'sic mundus', '1'),
('2', 'haus', '9'),
('3', 'tik-tak', '5'),
('4', 'schule', '3'),
('5', 'stunde', '2'),
('6', 'tiere', '4'),
('7', 'arbeit', '10'),
('8', 'adam', '8'),
('9', 'bahn', '7'),
('10', 'strasse', '6')
;

INSERT INTO `users_communities` VALUES
('1', '1'),
('2', '1'),
('2', '5'),
('3', '1'),
('3', '4'),
('4', '1'),
('4', '6'),
('5', '3'),
('6', '10'),
('7', '7'),
('8', '8'),
('9', '2'),
('10', '7')
;

INSERT INTO `profiles` VALUES 
('1','m','1976-11-08','1','1970-01-18 03:54:01','Winden'),
('2','f','2011-12-20','2','1994-11-06 23:56:10','Winden'),
('3','f','1994-06-15','3','1975-11-27 02:27:11','Winden'),
('4','m','1979-11-07','4','1994-04-12 04:31:49','Winden'),
('5','m','1976-04-19','5','1976-07-05 02:25:30','Winden'),
('6','m','1983-09-07','6','1981-06-20 15:54:43','Winden'),
('7','m','2014-07-31','7','1997-06-21 07:52:05','Winden'),
('8','f','1975-03-26','8','2008-08-18 18:23:25','Winden'),
('9','f','1982-11-01','9','2014-09-29 01:22:26','Winden'),
('10','m','1977-05-14','10','1980-03-17 18:17:45','Winden')
;

/*
дальше всё по аналогии

Задача 2.
Написать скрипт, возвращающий список имен (только firstname) пользователей без повторений в алфавитном порядке
*/

SELECT DISTINCT firstname
FROM users
ORDER BY firstname;


/*
Задача 3.
Написать скрипт, отмечающий несовершеннолетних пользователей как неактивных (поле is_active = false).
При необходимости предварительно добавить такое поле в таблицу profiles со значением по умолчанию = true (или 1).
*/

ALTER TABLE vk.profiles 
ADD COLUMN is_active BIT DEFAULT 1;

UPDATE profiles
SET is_active = 0
WHERE (birthday + INTERVAL 18 YEAR) > NOW();


/*
Задача 4.
Написать скрипт, удаляющий сообщения «из будущего» (дата позже сегодняшней).
*/

ALTER TABLE messages 
ADD COLUMN is_deleted BIT DEFAULT 0;

UPDATE messages
SET created_at = NOW() + interval 1 year
limit 2;

UPDATE messages
SET is_deleted = 1
WHERE created_at > NOW();
